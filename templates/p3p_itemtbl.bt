//------------------------------------------------
//--- 010 Editor v11.0.1 Binary Template
//
//      File: p3p's itemtbl.bin found in data/init_free.bin/init/
//   Authors: Pioziomgames
//   Version: 1.3
//   Purpose: Editing item stats
//  Category: Persona 3 Portable
// File Mask: itemtbl.bin
//  ID Bytes: 
//   History: 
//------------------------------------------------
#include "include/common.bt"

LittleEndian();

//Item Names are hardcoded
enum WeaponNames
{
    Dummy,
	Imitation_Katana,
	Outenta_Mitsuyo,
	Mikazuki_Munechika,
	Myohou_Muramasa,
	Onimaru_Kunitsuna,
	Juzumaru,
	Kishido_Blade,
	TwoHanded_Sword,
	Claymore,
	Deathbringer,
	Apocalypse,
	Balmung,
	Great_Sword,
	h0x00E,
	h0x00F,
	Zanbatou,
	Elixir_Sword,
	Caladbolg,
	Basic_Katana,
	Basic_Sword,
	Basic_Guan_Dao,
	Spiked_Bat,
	Laevateinn,
	Masakados_Katana,
	AllPurpose_Katana,
	h0x01A,
	Tsubakimaru,
	Raikou,
	Tobibotaru,
	h0x01E,
	h0x01F,
	Rapier,
	Elegant_Fleuret,
	Skrep,
	Damascus_Rapier,
	Main_Gauche,
	Night_Falcon,
	Saber,
	Tizona,
	Silver_Saber,
	Da_Xia_Long_Que,
	h0x02A,
	Qi_Xing_Dao,
	Shortsword,
	Gimlet,
	Gladius,
	Sin_Blade,
	Aroundight,
	Excalibur,
	Origin_Rapier,
	Nameless_Cutlass,
	Nameless_Katana,
	Steel_Pipe,
	Deus_Xiphos,
	Lucifers_Blade,
	Long_Wakizashi,
	Fudou_Masamune,
	Kaneshige,
	Amakuni,
	Kogarasumaru,
	Nikkari_Aoe,
	Nameless_Wakizashi,
	Legendary_Cleaver,
	h0x040,
	Sonic_Fist,
	Fists_of_Fury,
	Supreme_Gloves,
	Pugilists_Fists,
	Golden_Gloves,
	Champion_Gloves,
	Kaiser_Knuckles,
	Crusher_Fist,
	Brass_Knuckles,
	Blood_Baghnakh,
	Titanic_Knuckles,
	Wings_of_Vanth,
	Beast_Fangs,
	Wicked_Cestus,
	Bladefist,
	Double_Ziggurat,
	Dragon_Fangs,
	Root_Gloves,
	Root_Knuckles,
	Root_Cestus,
	Jacks_Gloves,
	Sabazios,
	Evil_Gloves,
	h0x058,
	h0x059,
	h0x05A,
	h0x05B,
	h0x05C,
	h0x05D,
	h0x05E,
	h0x05F,
	Staff_of_Guts,
	h0x061,
	Megaton_Rod,
	h0x063,
	Night_Stalker,
	Staff_of_Wrath,
	h0x066,
	Cross_Rod,
	Guillotine_Axe,
	Heavy_Axe,
	Executioners_Axe,
	Celtis,
	h0x06C,
	Ogre_Hammer,
	Gaeas_Grace,
	Charuns_Hammer,
	Colossus,
	Golden_Crusher,
	Origin_Club,
	Origin_Axe,
	Origin_Hammer,
	Bus_Stop_Sign,
	Corpse_Rod,
	Mjolnir,
	Crescent_Rod,
	h0x079,
	h0x07A,
	h0x07B,
	h0x07C,
	h0x07D,
	h0x07E,
	h0x07F,
	Omega_Spear,
	Ranseur,
	Lance_of_Death,
	Friuli_Spear,
	Rhongowennan,
	Gae_Bolg,
	Glaive,
	Treason_Couse,
	Sexy_Lance,
	Voulge,
	Poison_Glaive,
	Romulus_Spear,
	Cross_Spear,
	Shiden,
	Ningen_Mukotsu,
	Otegine,
	Nihongou,
	Tonbokiri,
	Foundation_Spear,
	Foundation_Glaive,
	Foundation_Pike,
	Scrub_Brush,
	Gungnir,
	Pinaka,
	h0x098,
	h0x099,
	h0x09A,
	h0x09B,
	h0x09C,
	h0x09D,
	h0x09E,
	h0x09F,
	Short_Bow,
	Uta,
	Composite_Bow,
	Bow_of_Affection,
	h0x0A4,
	h0x0A5,
	Sirens_Song,
	Kamatha,
	Great_Bow,
	Pleiades,
	Lightning_Bow,
	h0x0AB,
	Practice_Bow,
	Shigetouyumi,
	Higoyumi,
	Heros_Bow,
	Makis_Resolve,
	Yoichis_Bow,
	Source_Bow,
	Source_Longbow,
	Source_Yumi,
	Toy_Bow,
	Sarnga,
	Quintessence_Bow,
	w0x0B8,
	w0x0B9,
	w0x0BA,
	w0x0BB,
	w0x0BC,
	w0x0BD,
	w0x0BE,
	w0x0BF,
	h0x0C0,
	h0x0C1,
	Orgone_Rifle,
	Maxima_Sniper,
	Kiss_of_Athena,
	Pandemonium,
	h0x0C6,
	Albireo,
	Medusa,
	Sixshot,
	Megadeath,
	Orgilabeus,
	h0x0CC,
	Grenade_Launcher,
	Railgun,
	h0x0CF,
	Antimatter_Cannon,
	Brighids_Flame,
	Nucleus_Rifle,
	Nucleus_SMG,
	Nucleus_Cannon,
	Rocket_Punch,
	Metatronius,
	Phalanx_B2,
	Gamma_Storm,
	Axion_IG,
	Missile_Launcher,
	Fermion_Cannon,
	Assault_Rifle,
	h0x0D2,
	h0x0D3,
	h0x0D4,
	h0x0E0,
	Raven_Claw,
	Kunai,
	Blitz_Kunai,
	Gale_Kodachi,
	Kunai_of_Carnage,
	h0x0E6,
	Karasumaru,
	Shadowrend,
	h0x0E9,
	h0x0EA,
	h0x0EB,
	Sword_Breaker,
	Silver_Moon,
	Sylph_Blade,
	Pesh_Kabz,
	Athame,
	Grand_Slasher,
	Elementary_Kunai,
	Elementary_Knife,
	Bone,
	Vajra,
	Elementary_Mask,
	w0x0F7,
	w0x0F8,
	w0x0F9,
	w0x0FA,
	w0x0FB,
	w0x0FC,
	w0x0FD,
	Bare_Hand,
	w0x0FF,
	Flamberge,
	Malice_Marry,
	Serpent_Sword,
	Rose_Flamberge,
	Illuminati,
	h0x105,
	h0x106,
	h0x107,
	Quarter_Pike,
	Brionac,
	Ahlspiess,
	Israel_Spear,
	Ga_Boo,
	Longinus,
	h0x10E,
	h0x10F,
	Origin_Sabre,
	Origin_Spear,
	Kokuseki_Senjin,
	Billiard_Cue,
	Snow_Queen_Whip,
	h0x115,
	h0x116,
	h0x117,
	h0x118,
	h0x119,
	h0x11A,
	h0x11B,
	h0x11C,
	h0x11D,
	h0x11E,
	h0x11F,
	Imitation_Naginata,
	Kanemitsu,
	Tsukushi_Naginata,
	Sonobes_Naginata,
	Sukemitsu,
	Iwaotoshi,
	h0x126,
	h0x127,
	Meijian_Dao,
	Fangtian_Huaji,
	Chun_Qiu_Da_Dao,
	Quinlong_Yanyue,
	AmenoNuboko,
	w0x12D,
	w0x12E,
	w0x12F,
	Wood_Stick,
	Composite_Stick,
	Japan_Stick,
	Atlus_Stick,
	Victory_Stick,
	Youth_Stick,
	h0x136,
	h0x137,
	Original_Naginata,
	Original_Yanyue_Dao,
	Original_Staff,
	Lacross_Stick,
	Khakkhara,
	Beam_Naginata,
	Vel_Vel_Muruga,
	h0x13F,
	h0x140,
	h0x141,
	h0x142,
	h0x143,
	h0x144,
	h0x145,
	h0x146,
	h0x147,
	h0x148,
	h0x149,
	h0x14A,
	h0x14B,
	h0x14C,
	h0x14D,
	h0x14E,
	h0x14F,
	h0x150,
	h0x151,
	h0x152,
	h0x153,
	h0x154,
	h0x155,
	h0x156,
	h0x157,
	w0x158,
	w0x159,
	h0x15A,
	h0x15B,
	h0x15C,
	h0x15D,
	h0x15E,
	h0x15F,
	h0x160,
	h0x161,
	h0x162,
	h0x163,
	h0x164,
	h0x165,
	h0x166,
	h0x167,
	h0x168,
	h0x169,
	h0x16A,
	h0x16B,
	h0x16C,
	h0x16D,
	h0x16E,
	h0x16F,
	h0x170,
	h0x171,
	h0x172,
	h0x173,
	h0x174,
	h0x175,
	h0x176,
	h0x177,
	h0x178,
	h0x179,
	h0x17A,
	h0x17B,
	h0x17C,
	h0x17D,
	h0x17E,
	h0x17F,
	h0x180,
	h0x181,
	h0x182,
	h0x183,
	h0x184,
	h0x185,
	h0x186,
	h0x187,
	h0x188,
	h0x189,
	h0x18A,
	h0x18B,
	h0x18C,
	h0x18D,
	h0x18E,
	h0x18F,
	h0x190,
	h0x191,
	h0x192,
	h0x193,
	h0x194,
	h0x195,
	h0x196,
	w0x197,
	w0x198,
	w0x199,
	w0x19A,
	h0x19B,
	h0x19C,
	h0x19D,
	h0x19E,
	h0x19F,
	h0x1A0,
	w0x1A1,
	w0x1A2,
	w0x1A3,
	w0x1A4,
	w0x1A5,
	w0x1A6,
	w0x1A7,
	w0x1A8,
	w0x1A9,
	w0x1AA,
	w0x1AB,
	w0x1AC,
	w0x1AD,
	w0x1AE,
	w0x1AF,
	w0x1B0,
	w0x1B1,
	w0x1B2,
	w0x1B3,
	w0x1B4,
	w0x1B5,
	h0x1B6,
	h0x1B7,
	w0x1B8,
	w0x1B9,
	w0x1BA,
	w0x1BB,
	w0x1BC,
	w0x1BD,
	w0x1BE,
	w0x1BF,
	w0x1C0,
	w0x1C1,
	w0x1C2,
	w0x1C3,
	w0x1C4,
	w0x1C5,
	w0x1C6,
	w0x1C7,
	w0x1C8,
	w0x1C9,
	w0x1CA,
	w0x1CB,
	w0x1CC,
	w0x1CD,
	w0x1CE,
	w0x1CF,
	h0x1D0,
	h0x1D1,
	h0x1D2,
	h0x1D3,
	h0x1D4,
	h0x1D5,
	h0x1D6,
	h0x1D7,
	h0x1D8,
	h0x1D9,
	h0x1DA,
	h0x1DB,
	h0x1DC,
	h0x1DD,
	h0x1DE,
	h0x1DF,
	h0x1E0,
	h0x1E1,
	h0x1E2,
	h0x1E3,
	h0x1E4,
	h0x1E5,
	h0x1E6,
	h0x1E7,
	h0x1E8,
	h0x1E9,
	h0x1EA,
	h0x1EB,
	h0x1EC,
	h0x1ED,
	h0x1EE,
	h0x1EF,
	h0x1F0,
	h0x1F1,
	h0x1F2,
	h0x1F3,
	h0x1F4,
	h0x1F5,
	h0x1F6,
	h0x1F7,
	h0x1F8,
	h0x1F9,
	h0x1FA,
	h0x1FB,
	h0x1FC,
	h0x1FD,
	h0x1FE,
	h0x1FF,
};

enum ArmorNames
{
	ArmorBLANK,
	Plain_Shirt,
	Knit_Cardigan,
	Ruffled_Blouse,
	Dress_Shirt,
	Red_Vest,
	Zip_Hoodie,
	Long_Pea_Coat,
	AllPurpose_Apron,
	Emergency_Vest,
	Rash_Guard,
	Camo_Shirt,
	Bulletproof_Shirt,
	Metal_Protector,
	Amenity_Suit,
	h0x20F,
	h0x210,
	h0x211,
	h0x212,
	Masters_Garment,
	Amigo_Poncho,
	Bulletproof_Vest,
	Tetra_Jammer,
	Robe_of_Salvation,
	Mantle_of_Wind,
	Robe_of_Warding,
	Defender_Cloak,
	Gigantic_Armor,
	Kukais_Vestment,
	Kaiser_Armor,
	Final_Armor,
	Demons_Mail,
	Rangda_Robe,
	Papal_Robe,
	Armor_of_Light,
	h0x223,
	Silver_Plate,
	Carbon_Jacket,
	Shirt_of_Chivalry,
	Sids_Jacket,
	h0x228,
	h0x229,
	Tigerhide_Belt,
	Heros_Knickers,
	a0x22C,
	Stealth_Shirt,
	Powered_Suit,
	h0x22F,
	h0x230,
	h0x231,
	Hallowed_Plate,
	Phantom_Robe,
	h0x234,
	h0x235,
	Battle_Panties,
	h0x237,
	h0x238,
	Battle_Leotard,
	Spiked_Bra,
	h0x23B,
	Eternal_Plate,
	Dog_Suit,
	Cross_Dog_Suit,
	Titanium_Dog_Suit,
	Light_Dog_Suit,
	Leather_Dog_Suit,
	Metal_Dog_Suit,
	Dark_Dog_Suit,
	Powered_Dog_Suit,
	Lunar_Dog_Suit,
	Aura_Dog_Suit,
	Aramid_Vest,
	Aramid_Harness,
	Aramid_SemiShell,
	Aramid_FullShell,
	Aramid_Plate,
	Aramid_Compound,
	Ergo_Scale,
	Ergo_Armor,
	Fifth_Number,
	Papillon_Method,
	Blue_Shorts,
	Pink_Bikini,
	Blue_Swimwear,
	Elegant_Bikini,
	Sky_Sundress,
	Baseball_Jersey,
	Turtleneck,
	Red_Shorts,
	h0x259,
	Enamel_Torso,
	Velour_Torso,
	Nacre_Torso,
	Bisque_Torso,
	Bulletproof_Torso,
	Chevalier_Torso,
	Zircon_Torso,
	Jacquedrose,
	Vermelies,
	Oceanus_Scale,
	Soul_of_Athena,
	Joruri_Tengu,
	Aigis_Armor_v100,
	Meseauzer,
	h0x268,
	Hard_Dog_Suit,
	Raglan_TShirt,
	Dark_Jacket,
	SOutfit_Junpei,
	WOutfit_Junpei,
	SOutfit_Akihiko,
	WOutfit_Akihiko,
	SOutfit_Yukari,
	WOutfit_Yukari,
	SOutfit_Mitsuru,
	WOutfit_Mitsuru,
	WOutfit_Ken,
	Maid_Outfit_Y,
	Maid_Outfit_M,
	SUniform_Main,
	SUniform_Junpei,
	SUniform_Akihiko,
	SUniform_Yukari,
	SUniform_Mitsuru,
	WUniform_Aigis,
	SUniform_Ken,
	Maid_Outfit_A,
	Rock_Dog_Suit,
	Santa_Suit_Y,
	Santa_Suit_A,
	Santa_Suit_M,
	Junpei_Tuxedo,
	Akihiko_Tuxedo,
	Ken_Tuxedo,
	Shinjiro_Tuxedo,
	Koromaru_Tuxedo,
	Classical_Blouse,
	Orange_Cutsew,
	Angora_Sweater,
	KneeHigh_Maid,
	Ribbon_Bikini,
	h0x28D,
	h0x28E,
	h0x28F,
	h0x290,
	h0x291,
	h0x292,
	h0x293,
	h0x294,
	h0x295,
	h0x296,
	h0x297,
	h0x298,
	h0x299,
	h0x29A,
	h0x29B,
	h0x29C,
	h0x29D,
	h0x29E,
	h0x29F,
	h0x2A0,
	h0x2A1,
	h0x2A2,
	h0x2A3,
	h0x2A4,
	h0x2A5,
	h0x2A6,
	h0x2A7,
	h0x2A8,
	h0x2A9,
	h0x2AA,
	h0x2AB,
	h0x2AC,
	h0x2AD,
	h0x2AE,
	h0x2AF,
	h0x2B0,
	h0x2B1,
	h0x2B2,
	h0x2B3,
	h0x2B4,
	h0x2B5,
	h0x2B6,
	h0x2B7,
	h0x2B8,
	h0x2B9,
	h0x2BA,
	h0x2BB,
	h0x2BC,
	h0x2BD,
	h0x2BE,
	h0x2BF,
	h0x2C0,
	h0x2C1,
	h0x2C2,
	h0x2C3,
	h0x2C4,
	h0x2C5,
	h0x2C6,
	h0x2C7,
	h0x2C8,
	h0x2C9,
	h0x2CA,
	h0x2CB,
	h0x2CC,
	h0x2CD,
	h0x2CE,
	h0x2CF,
	h0x2D0,
	h0x2D1,
	h0x2D2,
	h0x2D3,
	h0x2D4,
	h0x2D5,
	h0x2D6,
	h0x2D7,
	h0x2D8,
	h0x2D9,
	h0x2DA,
	h0x2DB,
	h0x2DC,
	h0x2DD,
	h0x2DE,
	h0x2DF,
	h0x2E0,
	h0x2E1,
	h0x2E2,
	h0x2E3,
	h0x2E4,
	h0x2E5,
	h0x2E6,
	h0x2E7,
	h0x2E8,
	h0x2E9,
	h0x2EA,
	h0x2EB,
	h0x2EC,
	h0x2ED,
	h0x2EE,
	h0x2EF,
	h0x2F0,
	h0x2F1,
	h0x2F2,
	h0x2F3,
	h0x2F4,
	h0x2F5,
	h0x2F6,
	h0x2F7,
	h0x2F8,
	h0x2F9,
	h0x2FA,
	h0x2FB,
	h0x2FC,
	h0x2FD,
	h0x2FE,
	h0x2FF
};

enum BootNames
{
	BootsBLANK,
	Engineer_Boots,
	Brown_Loafers,
	KneeHigh_Boots,
	Straight_Tip,
	Inverse_Shoes,
	Soccer_Shoes,
	Western_Boots,
	Health_Sandals,
	Max_Safety_Shoes,
	Rubber_Sole,
	HighTech_Sandals,
	Leather_Boots,
	Inline_Skates,
	Mechanical_Geta,
	Combat_Boots,
	Crimson_Greaves,
	Magic_Sandals,
	Cyber_Shoes,
	Silent_Sandals,
	Needle_Shoes,
	Jet_Boots,
	Greaves_of_Dawn,
	Assassins_Shoes,
	Mirage_Sandals,
	h0x319,
	h0x31A,
	Shoes_of_Light,
	Shoes_of_Bane,
	Idatens_Sandals,
	War_Gods_Boots,
	Holy_Shoes,
	Goddess_Boots,
	Hanzos_Sandals,
	h0x322,
	h0x323,
	Dragon_Boots,
	RC_Geta,
	h0x326,
	Rugged_Geta,
	Killer_Cleats,
	h0x329,
	Lion_Sandals,
	Warriors_Boots,
	h0x32C,
	h0x32D,
	Vernal_Sandals,
	h0x32F,
	h0x330,
	h0x331,
	Hallowed_Boots,
	h0x333,
	Beast_Leggings,
	h0x335,
	Quick_Pumps,
	h0x337,
	Sexy_Heels,
	h0x339,
	h0x33A,
	h0x33B,
	Eternal_Shoes,
	Bare_Paws,
	h0x33E,
	h0x33F,
	h0x340,
	h0x341,
	h0x342,
	h0x343,
	h0x344,
	h0x345,
	h0x346,
	Civilized_Legs,
	Fiber_Legs,
	Pearlite_Legs,
	Fullerene_Legs,
	Ceramic_Legs,
	Cobalt_Legs,
	Titanium_Legs,
	Cermet_Legs,
	Ergo_Legs,
	Kugelbein,
	Black_Loafers,
	Enamel_Pied,
	Suede_Pied,
	Solid_Pied,
	Bisque_Pied,
	Alumina_Pied,
	Titanium_Pied,
	Zircon_Pied,
	Baskins,
	Leprechaun_Toe,
	Blood_Aries,
	Swan_Legs,
	Ellas_Slippers,
	Aigis_Legs_v100,
	Centurion,
	Vamp_Loafers,
	h0x362,
	h0x363,
	h0x364,
	h0x365,
	h0x366,
	h0x367,
	h0x368,
	h0x369,
	h0x36A,
	h0x36B,
	h0x36C,
	h0x36D,
	h0x36E,
	h0x36F,
	h0x370,
	h0x371,
	h0x372,
	h0x373,
	h0x374,
	h0x375,
	h0x376,
	h0x377,
	h0x378,
	h0x379,
	h0x37A,
	h0x37B,
	h0x37C,
	h0x37D,
	h0x37E,
	h0x37F,
	h0x380,
	h0x381,
	h0x382,
	h0x383,
	h0x384,
	h0x385,
	h0x386,
	h0x387,
	h0x388,
	h0x389,
	h0x38A,
	h0x38B,
	h0x38C,
	h0x38D,
	h0x38E,
	h0x38F,
	h0x390,
	h0x391,
	h0x392,
	h0x393,
	h0x394,
	h0x395,
	h0x396,
	h0x397,
	h0x398,
	h0x399,
	h0x39A,
	h0x39B,
	h0x39C,
	h0x39D,
	h0x39E,
	h0x39F,
	h0x3A0,
	h0x3A1,
	h0x3A2,
	h0x3A3,
	h0x3A4,
	h0x3A5,
	h0x3A6,
	h0x3A7,
	h0x3A8,
	h0x3A9,
	h0x3AA,
	h0x3AB,
	h0x3AC,
	h0x3AD,
	h0x3AE,
	h0x3AF,
	h0x3B0,
	h0x3B1,
	h0x3B2,
	h0x3B3,
	h0x3B4,
	h0x3B5,
	h0x3B6,
	h0x3B7,
	h0x3B8,
	h0x3B9,
	h0x3BA,
	h0x3BB,
	h0x3BC,
	h0x3BD,
	h0x3BE,
	h0x3BF,
	h0x3C0,
	h0x3C1,
	h0x3C2,
	h0x3C3,
	h0x3C4,
	h0x3C5,
	h0x3C6,
	h0x3C7,
	h0x3C8,
	h0x3C9,
	h0x3CA,
	h0x3CB,
	h0x3CC,
	h0x3CD,
	h0x3CE,
	h0x3CF,
	h0x3D0,
	h0x3D1,
	h0x3D2,
	h0x3D3,
	h0x3D4,
	h0x3D5,
	h0x3D6,
	h0x3D7,
	h0x3D8,
	h0x3D9,
	h0x3DA,
	h0x3DB,
	h0x3DC,
	h0x3DD,
	h0x3DE,
	h0x3DF,
	h0x3E0,
	h0x3E1,
	h0x3E2,
	h0x3E3,
	h0x3E4,
	h0x3E5,
	h0x3E6,
	h0x3E7,
	h0x3E8,
	h0x3E9,
	h0x3EA,
	h0x3EB,
	h0x3EC,
	h0x3ED,
	h0x3EE,
	h0x3EF,
	h0x3F0,
	h0x3F1,
	h0x3F2,
	h0x3F3,
	h0x3F4,
	h0x3F5,
	h0x3F6,
	h0x3F7,
	h0x3F8,
	h0x3F9,
	h0x3FA,
	h0x3FB,
	h0x3FC,
	h0x3FD,
	h0x3FE,
	h0x3FF,
    b0x2FF
};

enum<ushort>BattleSkill
{
    SlashAttack0 = 0,
    Agi = 1,
    Agilao = 2,
    Agidyne = 3,
    Maragi = 4,
    Maragion = 5,
    Maragidyne6 = 6,
    Maralagidyne = 7,
    hh0x008 = 8,
    Ragnarok = 9,
    Garu = 10,
    Garula = 11,
    Garudyne = 12,
    Magaru = 13,
    Magarula = 14,
    Magarudyne15 = 15,
    hh0x010 = 16,
    hh0x011 = 17,
    PantaRhei = 18,
    Bufu = 19,
    Bufula = 20,
    Bufudyne = 21,
    Mabufu = 22,
    Mabufula = 23,
    Mabufudyne24 = 24,
    hh0x019 = 25,
    hh0x01A = 26,
    Niflheim = 27,
    Zio = 28,
    Zionga = 29,
    Ziodyne = 30,
    Mazio = 31,
    Mazionga = 32,
    Maziodyne33 = 33,
    hh0x022 = 34,
    hh0x023 = 35,
    ThunderReign = 36,
    Megido = 37,
    Megidola = 38,
    Megidolaon39 = 39,
    LastResort = 40,
    hh0x029 = 41,
    hh0x02A = 42,
    BlackViper = 43,
    MorningStar = 44,
    Hama = 45,
    Mahama = 46,
    Hamaon = 47,
    Mahamaon48 = 48,
    hh0x031 = 49,
    Samsara = 50,
    Mudo = 51,
    Mamudo = 52,
    Mudoon = 53,
    Mamudoon54 = 54,
    hh0x037 = 55,
    DieforMe = 56,
    MarinKarin = 57,
    SexyDance58 = 58,
    Bewilder = 59,
    EerieSound60 = 60,
    Pulinpa = 61,
    Tentarafoo62 = 62,
    EvilTouch = 63,
    EvilSmile64 = 64,
    GhastlyWail = 65,
    Provoke = 66,
    Infuriate = 67,
    Poisma = 68,
    PoisonMist69 = 69,
    VirusBreath = 70,
    hh0x047 = 71,
    hh0x048 = 72,
    FoulBreath = 73,
    StagnantAir = 74,
    LifeDrain75 = 75,
    SpiritDrain76 = 76,
    hh0x04D = 77,
    hh0x04E = 78,
    hh0x04F = 79,
    Maragidyne80 = 80,
    Magarudyne81= 81,
    Mabufudyne82= 82,
    Maziodyne83 = 83,
    Megidolaon84 = 84,
    Mahamaon85 = 85,
    Mamudoon86 = 86,
    SexyDance87 = 87,
    EerieSound88 = 88,
    Tentarafoo89 = 89,
    EvilSmile90 = 90,
    PoisonMist91 = 91,
    HolyArrow92 = 92,
    LifeDrain93 = 93,
    SpiritDrain94 = 94,
    hh0x05F = 95,
    Death96 = 96,
    Yell97 = 97,
    Yell98 = 98,
    Death99 = 99,
    Death100 = 100,
    Death101 = 101,
    MoonlessGown102 = 102,
    MoonlessGown103 = 103,
    Summon104 = 104,
    SlashAttack105 = 105,
    PierceAttack106 = 106,
    StrikeAttack107 = 107,
    Yell108 = 108,
    PierceAttack109 = 109,
    FireAttack110 = 110,
    AlmightyAttack111 = 111,
    Bash = 112,
    AssaultDive = 113,
    KillRush = 114,
    SwiftStrike = 115,
    SonicPunch = 116,
    HeatWave = 117,
    GiganticFist = 118,
    AkashaArts = 119,
    GodsHand = 120,
    Cleave = 121,
    FatalEnd = 122,
    Getsuei = 123,
    Zanei = 124,
    MightySwing = 125,
    DoubleFangs = 126,
    BladeofFury = 127,
    Deathbound = 128,
    TempestSlash = 129,
    HeavensBlade = 130,
    Pralaya = 131,
    PowerSlash = 132,
    GaleSlash = 133,
    BraveBlade = 134,
    HerculeanStrike = 135,
    ViciousStrike = 136,
    SingleShot = 137,
    TwinShot = 138,
    HolyArrow139 = 139,
    TorrentShot = 140,
    ArrowRain = 141,
    MyriadArrows = 142,
    PrimalForce = 143,
    VorpalBlade = 144,
    WearyThrust = 145,
    CruelAttack = 146,
    VileAssault = 147,
    PoisonArrow = 148,
    WearyThrust_unused = 149,
    VorpalBlade_unused = 150,
    hh0x097 = 151,
    hh0x098 = 152,
    hh0x099 = 153,
    hh0x09A = 154,
    hh0x09B = 155,
    hh0x09C = 156,
    hh0x09D = 157,
    hh0x09E = 158,
    hh0x09F = 159,
    charmlow160 = 160,
    charmmed161 = 161,
    charmhigh162 = 162,
    distresslow163 = 163,
    distressmed164 = 164,
    distresshigh165 = 165,
    paniclow166 = 166,
    panicmed167 = 167,
    panichigh168 = 168,
    fearlow169 = 169,
    fearmed170 = 170,
    fearhigh171 = 171,
    ragelow172 = 172,
    ragemed173 = 173,
    ragehigh174 = 174,
    poisonlow175 = 175,
    h0x0B0 = 176,
    h0x0B1 = 177,
    h0x0B2 = 178,
    h0x0B3 = 179,
    h0x0B4 = 180,
    h0x0B5 = 181,
    h0x0B6 = 182,
    h0x0B7 = 183,
    h0x0B8 = 184,
    h0x0B9 = 185,
    h0x0BA = 186,
    h0x0BB = 187,
    h0x0BC = 188,
    h0x0BD = 189,
    h0x0BE = 190,
    h0x0BF = 191,
    Dia = 192,
    Diarama = 193,
    Diarahan = 194,
    Media = 195,
    Mediarama = 196,
    Mediarahan = 197,
    Salvation = 198,
    Patra = 199,
    MePatra = 200,
    RePatra = 201,
    Posumudi = 202,
    Amrita = 203,
    Recarm = 204,
    Samarecarm = 205,
    Tarunda = 206,
    Matarunda = 207,
    Sukunda = 208,
    Masukunda = 209,
    Rakunda = 210,
    Marakunda = 211,
    Dekunda = 212,
    h0x0D5 = 213,
    Tarukaja = 214,
    Matarukaja = 215,
    Sukukaja = 216,
    Masukukaja = 217,
    Rakukaja = 218,
    Marakukaja = 219,
    PowerCharge = 220,
    MindCharge = 221,
    h0x0DE = 222,
    Dekaja = 223,
    Tetrakarn = 224,
    Makarakarn = 225,
    Rebellion = 226,
    Revolution = 227,
    h0x0E4 = 228,
    FireBreak = 229,
    IceBreak = 230,
    WindBreak = 231,
    ElecBreak = 232,
    Traesto = 233,
    Trafuri = 234,
    HealingWave235 = 235,
    Recarmdra = 236,
    Charmdi = 237,
    Enradi = 238,
    h0x0EF = 239,
    h0x0F0 = 240,
    h0x0F1 = 241,
    h0x0F2 = 242,
    h0x0F3 = 243,
    h0x0F4 = 244,
    h0x0F5 = 245,
    h0x0F6 = 246,
    h0x0F7 = 247,
    h0x0F8 = 248,
    h0x0F9 = 249,
    h0x0FA = 250,
    h0x0FB = 251,
    h0x0FC = 252,
    h0x0FD = 253,
    h0x0FE = 254,
    h0x0FF = 255,
    SummerDream256 = 256,
    SummerDream257 = 257,
    SummerDream258 = 258,
    SummerDream259 = 259,
    SummerDream260 = 260,
    SummerDream261 = 261,
    SummerDream262 = 262,
    SummerDream263 = 263,
    SummerDream264 = 264,
    SummerDream265 = 265,
    SummerDream266 = 266,
    SummerDream267 = 267,
    SummerDream268 = 268,
    SummerDream269 = 269,
    SummerDream270 = 270,
    SummerDream271 = 271,
    JackBrothers = 272,
    Ardhanari = 273,
    Trickster274 = 274,
    Infinity = 275,
    Valhalla = 276,
    SummerDream = 277,
    Armageddon = 278,
    Cadenza = 279,
    ScarletHavoc = 280,
    Frolic = 281,
    Dreamfest = 282,
    KingandI = 283,
    BestFriends = 284,
    ShadowHound = 285,
    ThunderCall = 286,
    LastJudge = 287,
    Raktapaksha = 288,
    Justice289 = 289,
    Trickster290 = 290,
    h0x123 = 291,
    h0x124 = 292,
    PrimalDarkness293 = 293,
    DarkEmbrace = 294,
    PrimalDarkness295 = 295,
    PrimalDarkness296 = 296,
    h0x129 = 297,
    h0x12A = 298,
    h0x12B = 299,
    h0x12C = 300,
    h0x12D = 301,
    h0x12E = 302,
    h0x12F = 303,
    PierceAttack304 = 304,
    FireAttack305 = 305,
    Summon306 = 306,
    Summon307 = 307,
    ArmedReady = 308,
    Sacrifice = 309,
    ArcanaShift310 = 310,
    ArcanaShift311 = 311,
    ArcanaShift312 = 312,
    ArcanaShift313 = 313,
    ArcanaShift314 = 314,
    ArcanaShift315 = 315,
    ArcanaShift316 = 316,
    ArcanaShift317 = 317,
    ArcanaShift318 = 318,
    NightQueen = 319,
    AllOut2 = 320,
    AllOut3 = 321,
    AllOut4 = 322,
    PlumeofDusk323 = 323,
    Analyze = 324,
    Oracle325 = 325,
    FullAnalysis = 326,
    Oracle327 = 327,
    Oracle328 = 328,
    Oracle329 = 329,
    Oracle330 = 330,
    Oracle331 = 331,
    AllOut2L = 332,
    AllOut3L = 333,
    AllOut4L = 334,
    SupportScan = 335,
    ThirdEye = 336,
    MindDJ = 337,
    DJQueen = 338,
    EscapeRoute = 339,
    HealingWave340 = 340,
    Summon341 = 341,
    OrgiaMode = 342,
    GreatSeal = 343,
    h0x158 = 344,
    h0x159 = 345,
    IceAttack = 346,
    WindAttack = 347,
    ElecAttack = 348,
    FireAttack349 = 349,
    PierceAttack350 = 350,
    StrikeAttack351 = 351,
    Summon352 = 352,
    Summon353 = 353,
    Summon354 = 354,
    ProphecyofRuin = 355,
    Heartbreaker = 356,
    Unite = 357,
    Separate = 358,
    PierceAttack359 = 359,
    PierceAttack360 = 360,
    Samarecarm361 = 361,
    Samarecarm362 = 362,
    Charge = 363,
    GigaSpark = 364,
    WheelofFortune365 = 365,
    WheelofFortune366 = 366,
    WheelofFortune367 = 367,
    ParadigmShift = 368,
    WheelofFortune369 = 369,
    WheelofFortune370 = 370,
    EAttackUp = 371,
    PAttackUp = 372,
    EAttackDown = 373,
    PAttackDown = 374,
    EDefenseUp = 375,
    PDefenseUp = 376,
    EDefenseDown = 377,
    PDefenseDown = 378,
    EPanic = 379,
    PPanic = 380,
    ERage = 381,
    PRage = 382,
    EDistress = 383,
    PDistress = 384,
    EFear = 385,
    PFear = 386,
    EDamageLow = 387,
    PDamageLow = 388,
    EDamageMid = 389,
    PDamageMid = 390,
    EDamageHigh = 391,
    PDamageHigh = 392,
    EHeal = 393,
    PHeal = 394,
    AlmightyAttack395 = 395,
    ArcanaShift396 = 396,
    ArcanaShift397 = 397,
    ArcanaShift398 = 398,
    ArcanaShift399 = 399,
    BandAid = 400,
    Medicine = 401,
    Bead = 402,
    SnuffSoul = 403,
    ChewingSoul = 404,
    PreciousEgg = 405,
    Soma = 406,
    h0x197 = 407,
    h0x198 = 408,
    h0x199 = 409,
    h0x19A = 410,
    MuscleDrink = 411,
    OddMorsel = 412,
    RancidGravy = 413,
    PowerfulDrug = 414,
    ColdMedicine = 415,
    EnergyDrink = 416,
    h0x1A1 = 417,
    h0x1A2 = 418,
    h0x1A3 = 419,
    h0x1A4 = 420,
    h0x1A5 = 421,
    h0x1A6 = 422,
    h0x1A7 = 423,
    h0x1A8 = 424,
    h0x1A9 = 425,
    h0x1AA = 426,
    h0x1AB = 427,
    h0x1AC = 428,
    h0x1AD = 429,
    h0x1AE = 430,
    h0x1AF = 431,
    h0x1B0 = 432,
    h0x1B1 = 433,
    h0x1B2 = 434,
    h0x1B3 = 435,
    h0x1B4 = 436,
    h0x1B5 = 437,
    Homunculus = 438,
    PlumeofDusk439 = 439,
    h0x1B8 = 440,
    h0x1B9 = 441,
    h0x1BA = 442,
    h0x1BB = 443,
    h0x1BC = 444,
    h0x1BD = 445,
    h0x1BE = 446,
    h0x1BF = 447,
    h0x1C0 = 448,
    h0x1C1 = 449,
    h0x1C2 = 450,
    h0x1C3 = 451,
    h0x1C4 = 452,
    h0x1C5 = 453,
    h0x1C6 = 454,
    h0x1C7 = 455,
    h0x1C8 = 456,
    h0x1C9 = 457,
    h0x1CA = 458,
    h0x1CB = 459,
    h0x1CC = 460,
    h0x1CD = 461,
    h0x1CE = 462,
    h0x1CF = 463,
    ResistSlash = 464,
    NullSlash = 465,
    RepelSlash = 466,
    AbsorbSlash = 467,
    ResistStrike = 468,
    NullStrike = 469,
    RepelStrike = 470,
    AbsorbStrike = 471,
    ResistPierce = 472,
    NullPierce = 473,
    RepelPierce = 474,
    AbsorbPierce = 475,
    ResistFire = 476,
    NullFire = 477,
    RepelFire = 478,
    AbsorbFire = 479,
    ResistIce = 480,
    NullIce = 481,
    RepelIce = 482,
    AbsorbIce = 483,
    ResistElec = 484,
    NullElec = 485,
    RepelElec = 486,
    AbsorbElec = 487,
    ResistWind = 488,
    NullWind = 489,
    RepelWind = 490,
    AbsorbWind = 491,
    ResistLight = 492,
    NullLight = 493,
    RepelLight = 494,
    ResistDark = 495,
    NullDark = 496,
    RepelDark = 497,
    NullCharm = 498,
    NullDistress = 499,
    NullPanic = 500,
    NullFear = 501,
    NullRage = 502,
    NullFreeze = 503,
    NullShock = 504,
    NullPoison = 505,
    UnshakenWill = 506,
    Masakados = 507,
    DodgeSlash = 508,
    EvadeSlash = 509,
    DodgeStrike = 510,
    EvadeStrike = 511,
    DodgePierce = 512,
    EvadePierce = 513,
    DodgeFire = 514,
    EvadeFire = 515,
    DodgeIce = 516,
    EvadeIce = 517,
    DodgeWind = 518,
    EvadeWind = 519,
    DodgeElec = 520,
    EvadeElec = 521,
    StaminaUp1 = 522,
    StaminaUp2 = 523,
    StaminaUp3 = 524,
    h0x20D = 525,
    Premonition = 526,
    AngelicGrace = 527,
    FireBoost = 528,
    FireAmp = 529,
    IceBoost = 530,
    IceAmp = 531,
    ElecBoost = 532,
    ElecAmp = 533,
    WindBoost = 534,
    WindAmp = 535,
    FastRetreat = 536,
    HPUp1 = 537,
    HPUp2 = 538,
    HPUp3 = 539,
    SPUp1 = 540,
    SPUp2 = 541,
    SPUp3 = 542,
    RagingTiger = 543,
    Counter = 544,
    Counterstrike = 545,
    HighCounter = 546,
    Regenerate1 = 547,
    Regenerate2 = 548,
    Regenerate3 = 549,
    Invigorate1 = 550,
    Invigorate2 = 551,
    Invigorate3 = 552,
    Growth1 = 553,
    Growth2 = 554,
    Growth3 = 555,
    h0x22C = 556,
    AutoTarukaja = 557,
    AutoRakukaja = 558,
    AutoSukukaja = 559,
    Alertness = 560,
    SharpStudent = 561,
    AptPupil = 562,
    AliDance = 563,
    FirmStance = 564,
    SpellMaster = 565,
    ArmsMaster = 566,
    HPUp = 567,
    SPUp = 568,
    h0x239 = 569,
    DivineGrace = 570,
    Endure = 571,
    EnduringSoul = 572,
    HeavyMaster = 573,
    MagicSkillUp = 574,
    PhysSkillUp = 575,
    h0x240576 = 576,
    h0x240577 = 577,
    h0x240578 = 578,
    h0x243 = 579,
    Rosary = 580,
    PrayerBeads = 581,
    SpearMaster = 582,
    BowMaster = 583,
    Skill1hSwdMaster = 584,
    Skill2hSwdMaster = 585,
    FistMaster = 586,
    SurviveLight = 587,
    SurviveDark = 588,
    AutoMaraku = 589,
    AutoMataru = 590,
    AutoMasuku = 591,
    CharmBoost = 592,
    PoisonBoost = 593,
    DistressBoost = 594,
    PanicBoost = 595,
    FearBoost = 596,
    RageBoost = 597,
    AilmentBoost = 598,
    HamaBoost = 599,
    MudoBoost = 600,
    EndureLight = 601,
    EndureDark = 602,
    h0x25B = 603,
    h0x25C = 604,
    CoolBreeze = 605,
    VictoryCry = 606,
    SpringofLife607 = 607,
    SpringofLife608 = 608,
    ForDebug = 609,
    FastHeal = 610,
    InstaHeal = 611,
    ResistCharm = 612,
    ResistDistress = 613,
    ResistPanic = 614,
    ResistFear = 615,
    ResistRage = 616,
    ResistFreeze = 617,
    ResistShock = 618,
    ResistPoison = 619,
    HPUpHigh = 620,
    SPUpHigh = 621,
    h0x26E = 622,
    h0x26F = 623,
};

enum AccessoryNames
{
    AccessoryBLANK,
	Power_Band,
	Mega_Power_Band,
	Giga_Power_Band,
	Tera_Power_Band,
	Magic_Band,
	Mega_Magic_Band,
	Giga_Magic_Band,
	Tera_Magic_Band,
	Guard_Band,
	Mega_Guard_Band,
	Giga_Guard_Band,
	Tera_Guard_Band,
	Speed_Band,
	Mega_Speed_Band,
	Giga_Speed_Band,
	Tera_Speed_Band,
	Luck_Band,
	Mega_Luck_Band,
	Giga_Luck_Band,
	Tera_Luck_Band,
	h0x415,
	Black_Gods_Rock,
	h0x417,
	h0x418,
	h0x419,
	Kohryuus_Scale,
	h0x41B,
	h0x41C,
	h0x41D,
	Mystic_Rock,
	h0x41F,
	h0x420,
	h0x421,
	Blazing_Flame,
	h0x423,
	h0x424,
	h0x425,
	Frozen_Stone,
	h0x427,
	h0x428,
	h0x429,
	Lightning_Gloves,
	h0x42B,
	h0x42C,
	a0x3AD,
	Storm_Ring,
	h0x42F,
	h0x430,
	White_Feather,
	Radiant_Halo,
	h0x433,
	Black_Feather,
	Ring_of_Darkness,
	h0x436,
	Narcissus_Flower,
	Staunch_Anklets,
	Unbreakable_Cage,
	Serpents_Eye,
	Ring_of_Serenity,
	Frost_Cap,
	Lightning_Armlet,
	Alicorn,
	Tome_of_the_Void,
	Omnipotent_Orb,
	Slash_Ward,
	Slash_Repeller,
	Strike_Ward,
	Strike_Repeller,
	Pierce_Ward,
	Pierce_Repeller,
	Flame_Charm,
	Eye_of_Flame,
	Ice_Charm,
	Eye_of_Ice,
	Wind_Charm,
	Eye_of_Wind,
	Thunder_Charm,
	Eye_of_Thunder,
	Masakados_Hair,
	Book_of_Enoch,
	Fire_Bracers,
	Agni_Bracers,
	Ice_Bracers,
	Varuna_Bracers,
	Thunder_Bracers,
	Indra_Bracers,
	Wind_Bracers,
	Vayu_Bracers,
	Indigo_Cape,
	Rosarya,
	Prayer_Beads,
	h0x45C,
	h0x45D,
	h0x45E,
	Frenzy_Beads,
	Warriors_Seal,
	War_Gods_Seal,
	Berserkers_Seal,
	Land_Badge,
	Earth_Badge,
	Space_Badge,
	Mages_Mark,
	Sorcerers_Mark,
	Wizards_Mark,
	h0x469,
	h0x46A,
	h0x46B,
	h0x46C,
	Power_Enhancer,
	Guard_Enhancer,
	Speed_Enhancer,
	Shadow_Sensor,
	Sigma_Drive,
	Omega_Drive,
	Barbaric_Bracers,
	Divine_Pillar,
	Chakra_Ring,
	Rudra_Ring,
	h0x477,
	h0x478,
	h0x479,
	Draupnir,
	Spirit_Bracers,
	Sacrificial_Idol,
	h0x47D,
	h0x47E,
	h0x47F,
	Portable_Player,
	Silver_Necklace,
	Heart_Choker,
	Leather_Gloves,
	Red_Ribbon,
	Koromaru_Wings,
	Fancy_Nails,
	Wristband,
	Beanie,
	Silver_Ring,
	h0x48A,
	Platinum_Watch,
	h0x48C,
	h0x48D,
	h0x48E,
	Bead_Necklace,
	Life_Ring,
	Energy_Ring,
	Vitality_Ring,
	Spirit_Ring,
	Spell_Ring,
	Magic_Ring,
	Portable_Player2,
	Alarm_Watch,
	Felt_Doll,
	GoodLuck_Charm,
	Wooden_Sword,
	Kinkakuji_Keychain,
	h0x49C,
	h0x49D,
	h0x49E,
	h0x49F,
	h0x4A0,
	h0x4A1,
	h0x4A2,
	h0x4A3,
	h0x4A4,
	h0x4A5,
	h0x4A6,
	h0x4A7,
	h0x4A8,
	h0x4A9,
	h0x4AA,
	h0x4AB,
	h0x4AC,
	h0x4AD,
	h0x4BE,
	h0x4BF,
	h0x4B0,
	h0x4B1,
	h0x4B2,
	h0x4B3,
	h0x4B4,
	h0x4B5,
	h0x4B6,
	h0x4B7,
	h0x4B8,
	h0x4B9,
	h0x4BA,
	h0x4BB,
	h0x4BC,
	h0x4BD,
	a0x4BE,
	a0x4BF,
	h0x4C0,
	h0x4C1,
	h0x4C2,
	h0x4C3,
	h0x4C4,
	h0x4C5,
	h0x4C6,
	h0x4C7,
	h0x4C8,
	h0x4C9,
	h0x4CA,
	h0x4CB,
	h0x4CC,
	h0x4CD,
	h0x4CE,
	h0x4CF,
	h0x4D0,
	h0x4D1,
	h0x4D2,
	h0x4D3,
	h0x4D4,
	h0x4D5,
	h0x4D6,
	h0x4D7,
	h0x4D8,
	h0x4D9,
	h0x4DA,
	h0x4DB,
	h0x4DC,
	h0x4DD,
	h0x4DE,
	h0x4DF,
	h0x4E0,
	h0x4E1,
	h0x4E2,
	h0x4E3,
	h0x4E4,
	h0x4E5,
	h0x4E6,
	h0x4E7,
	h0x4E8,
	h0x4E9,
	h0x4EA,
	h0x4EB,
	h0x4EC,
	h0x4ED,
	h0x4EE,
	h0x4EF,
	h0x4F0,
	h0x4F1,
	h0x4F2,
	h0x4F3,
	h0x4F4,
	h0x4F5,
	h0x4F6,
	h0x4F7,
	h0x4F8,
	h0x4F9,
	h0x4FA,
	h0x4FB,
	h0x4FC,
	h0x4FD,
	h0x4FE,
	h0x4FF
};

enum ItemNames
{
    BLANK,
	MedicineI,
	Medical_Powder,
	BeadI,
	Snuff_Soul,
	Chewing_Soul,
	Precious_Egg,
	SomaI,
	DisPoison,
	Revival_Bead,
	Balm_of_Life,
	Me_Patra_Gem,
	Muscle_Drink,
	Odd_Morsel,
	Rancid_Gravy,
	Powerful_Drug,
	Umugi_Water,
	Amrita_Soda,
	Nihil_Longsword,
	DisRage,
	DisCharm,
	Treasure_Box_Cash,
	Purifying_Rice,
	Curse_Paper,
	Fierce_Sutra,
	Agility_Sutra,
	Protection_Sutra,
	Flame_Magatama,
	Gale_Magatama,
	Frigid_Magatama,
	Shock_Magatama,
	h0x51F,
	Patra_Gem,
	Traesto_Gem,
	Bead_Chain,
	Magic_Mirror,
	Attack_Mirror,
	Dekaja_Gem,
	Dekunda_Gem,
	HomunculusI,
	Plume_of_Dusk,
	Agilao_Gem,
	Maragi_Gem,
	Bufula_Gem,
	Mabufu_Gem,
	Garula_Gem,
	Magaru_Gem,
	Zionga_Gem,
	Mazio_Gem,
	Megido_Gem,
	Trafuri_Gem,
	h0x533,
	Page_of_Swords,
	Knight_of_Swords,
	Queen_of_Swords,
	King_of_Swords,
	Page_of_Cups,
	Knight_of_Cups,
	Queen_of_Cups,
	King_of_Cups,
	Page_of_Wands,
	Knight_of_Wands,
	Queen_of_Wands,
	King_of_Wands,
	Page_of_Coins,
	Knight_of_Coins,
	Queen_of_Coins,
	King_of_Coins,
	h0x544,
	Nihil_Sword,
	Nihil_Gloves,
	Nihil_Spear,
	Nihil_Bow,
	Nihil_Axe,
	Nihil_Knife,
	Nihil_Gun,
	Void_Naginata,
	Void_Sword,
	h0x54E,
	h0x54F,
	Rose_Bouquet,
	Red_Pine_Bonsai,
	Mini_Cactus,
	Glass_Vase,
	Perfume,
	Brand_Wallet,
	Brand_Watch,
	Brand_Purse,
	Teddy_Bear,
	Japanese_Doll,
	Kaleidoscope,
	Goggleeyed_Idol,
	Jack_Frost_Doll,
	Book_Cover,
	Lucky_Charm,
	Ganesha_Bank,
	Amethyst,
	Aquamarine,
	Emerald,
	Onyx,
	Opal,
	Garnet,
	Sapphire,
	Diamond,
	Turquoise,
	Topaz,
	Pearl,
	Ruby,
	Weird_Takoyaki,
	Wild_Burger,
	Instant_Ramen,
	Side_Dish,
	Dr_Salt,
	Mad_Bull,
	SoBay,
	Moonkist,
	Cielo_Mist,
	Nastea,
	BauerBar,
	Cylon_Tea,
	h1UP,
	Starvicks,
	Aguafeena,
	Durian_Soda,
	Fountain_Dew,
	Jumbo_Juice,
	V6,
	Special_Drink,
	Beetle_Shell,
	Old_Lantern,
	Yakisoba_Bread,
	Apple_Strudel,
	Cutlet_Sandwich,
	Melon_Bread,
	Crab_Bread,
	Fried_Bread,
	Coffee_Jelly,
	Chocolate_Cake,
	Fuukas_Cookie,
	Champagne,
	Medicated_Patch,
	Cute_Keychain,
	h0x58E,
	h0x58F,
	Wealth_Coin,
	Treasure_Coin,
	Supreme_Coin,
	Opulent_Coin,
	Luxury_Coin,
	Glorious_Coin,
	Megidolaon_Gem,
	Oden_Juice,
	Super_Cat_Food,
	Red_Quillion,
	White_Quillion,
	Black_Quillion,
	h0x59C,
	h0x59D,
	Lead_Medal,
	Steel_Medal,
	Bronze_Medal,
	Silver_Medal,
	Gold_Medal,
	Anatomical_Model,
	Gekkoukan_Boogie,
	Queen_Elizabeth,
	Mahjong_Tile,
	Inari_Sushi,
	Platinum_Medal,
	Bronze_Figurine,
	Snake_Scale,
	Relic_Fragment,
	Greasy_Gear,
	Tiaras_Hair,
	Knights_Reins,
	Empresss_Mirror,
	Gold_Handguard,
	Gold_Ring,
	Red_Armor_Plate,
	Pink_Feather,
	Moon_Tablet,
	Sand_of_Time,
	Rainbow_Hair,
	Bloody_Button,
	Shadow_Shard,
	Shadow_Crystal,
	Empresss_Mask,
	Vibrant_Cloth,
	Beetle_Horn,
	Golden_Beard,
	Massive_Wheel,
	Dense_Rock,
	Broken_Heart,
	Fine_Statuette,
	Namayatsuhashi,
	Pickled_Turnip,
	Konpeito,
	Mibu_Cracker,
	Diet_Food,
	Super_Diet_Food,
	Veggie_Supplement,
	Health_Supplement,
	Mega_Protein,
	Sappy_Jelly,
	Mind_Supplement,
	Copper_Doorknob,
	Silver_Glasses,
	Golden_Pacifier,
	Platinum_Noseplug,
	Diamond_Pickler,
	Steel_Right_Arm,
	Broken_Wheel,
	Shining_Beard,
	Ebon_Heart,
	Fire_Element,
	Thunder_Element,
	Ice_Element,
	Throne_of_Ruin,
	Burning_Grail,
	Scarlet_Choker,
	Infernal_Armor,
	Bloody_Horse,
	AllSeeing_Eye,
	Jack_Brothers,
	ArdhanariI,
	Trickster,
	InfinityI,
	ValhallaI,
	Summer_Dream,
	ArmageddonI,
	CadenzaI,
	Scarlet_Havoc,
	FrolicI,
	DreamfestI,
	King_and_I,
	Best_Friends,
	Shadow_Hound,
	Thunder_Call,
	Last_Judge,
	RaktapakshaI,
	JusticeI,
	MalachiteI,
	YawnBGone,
	h0x5F3,
	h0x5F4,
	Music_Box,
	Coffee_Cup,
	Chocolate_Truffle,
	Sweet_Fries,
	Sugar_Cookie,
	Banana_Cupcake,
	Japanese_Strap,
	Knit_Rabbit,
	Felt_Bag,
	Handknit_Scarf,
	h0x5FF
};

enum KeyItemNames
{
	KeyItemBLANK,
	Velvet_Key,
	Steel_Fragment,
	h0x603,
	Handmade_Choker,
	h0x605,
	h0x606,
	Cheap_Lighter,
	Persimmon_Fruit,
	Yukaris_Strap,
	Headphones,
	Motorcycle_Key,
	Kids_Letter,
	Manga,
	Sports_Tape,
	h0x60F,
	Screenshot_Data,
	Award_Letter,
	Charred_Screw,
	Bead_Ring,
	h0x614,
	Money_Pouch,
	Thankyou_Letter,
	Reserve_Tag,
	Car_Key,
	Gourmet_License,
	Worn_Notebook,
	h0x61B,
	Red_Fountain_Pen,
	Persimmon_Leaf,
	h0x61E,
	h0x61F,
	Platinum_Bookmark,
	Torn_Black_Cloth,
	Sugar_Key,
	Machine_Core,
	Marionette,
	Lily_Petal,
	MasakadosI,
	Old_Document_01,
	Old_Document_02,
	Old_Document_03,
	Old_Document_04,
	Old_Document_05,
	Old_Document_06,
	Old_Document_07,
	Old_Document_08,
	h0x62F,
	Small_Cheongsam,
	Book_of_Ancients,
	Blue_Scale,
	Rainbow_Feather,
	Red_Muffler,
	Kanetsugus_Helm,
	Colorless_Mask,
	Pine_Resin,
	Fencing_Epee,
	Glasses_Wipe,
	Poinsettia,
	Handheld_Game,
	Fruit_Knife,
	Featherman_R,
	Amateur_Protein,
	Gourmet_Dog_Food,
	Machine_Oil,
	Key_of_Time,
	True_Key,
	h0x643,
	h0x644,
	h0x645,
	h0x646,
	h0x647,
	h0x648,
	h0x649,
	h0x64A,
	h0x64B,
	h0x64C,
	h0x64D,
	h0x64E,
	Dirty_Collar,
	Rabbit_Doll,
	Silver_Key,
	Leather_Watch,
	Pig_Key_Holder,
	Annotated_Guide,
	PA_Recording,
	Faint_Glow_Ring,
	Fragrant_Bookmark,
	Jade_Bookmark,
	h0x659,
	h0x65A,
	h0x65B,
	h0x65C,
	h0x65D,
	h0x65E,
	h0x65F,
	Old_Pocketwatch,
	Dog_Food,
	h0x662,
	h0x663,
	h0x664,
	h0x665,
	h0x666,
	h0x667,
	h0x668,
	h0x669,
	h0x66A,
	h0x66B,
	h0x66C,
	h0x66D,
	h0x66E,
	h0x66F,
	h0x670,
	h0x671,
	h0x672,
	h0x673,
	h0x674,
	h0x675,
	h0x676,
	h0x677,
	h0x678,
	h0x679,
	h0x67A,
	h0x67B,
	h0x67C,
	h0x67D,
	h0x67E,
	h0x67F,
	h0x680,
	h0x681,
	h0x682,
	h0x683,
	h0x684,
	h0x685,
	h0x686,
	h0x687,
	h0x688,
	h0x689,
	h0x68A,
	h0x68B,
	h0x68C,
	h0x68D,
	h0x68E,
	h0x68F,
};

enum SkillCardNames
{
	Agi_card,
	Agilao_card,
	Agidyne_card,
	Maragi_card,
	Maragilao_card,
	Maragidyne_card,
	Maralagidyne_card,
	Garu_card,
	Garula_card,
	Garudyne_card,
	Magaru_card,
	Magarula_card,
	Magarudyne_card,
	Bufu_card,
	Bufula_card,
	Bufudyne_card,
	Mabufu_card,
	Mabufula_card,
	Mabufudyne_card,
	Zio_card,
	Zionga_card,
	Ziodyne_card,
	Mazio_card,
	Mazionga_card,
	Maziodyne_card,
	Megido_card,
	Megidola_card,
	Megidolaon_card,
	Hama_card,
	Mahama_card,
	Hamaon_card,
	Mahamaon_card,
	Mudo_card,
	Mamudo_card,
	Mudoon_card,
	Mamudoon_card,
	Marin_Karin_card,
	Sexy_Dance_card,
	Bewilder_card,
	Eerie_Sound_card,
	Pulinpa_card,
	Tentarafoo_card,
	Evil_Touch_card,
	Evil_Smile_card,
	Ghastly_Wail_card,
	Provoke_card,
	Infuriate_card,
	Poisma_card,
	Poison_Mist_card,
	Virus_Breath_card,
	Foul_Breath_card,
	Stagnant_Air_card,
	Life_Drain_card,
	Spirit_Drain_card,
	Bash_card,
	Assault_Dive_card,
	Kill_Rush_card,
	Swift_Strike_card,
	Sonic_Punch_card,
	Heat_Wave_card,
	Gigantic_Fist_card,
	Akasha_Arts_card,
	Gods_Hand_card,
	Cleave_card,
	Fatal_End_card,
	Getsuei_card,
	Zanei_card,
	Mighty_Swing_card,
	Double_Fangs_card,
	Blade_of_Fury_card,
	Deathbound_card,
	Tempest_Slash_card,
	Heavens_Blade_card,
	Pralaya_card,
	Power_Slash_card,
	Gale_Slash_card,
	Brave_Blade_card,
	Herculean_Strike_card,
	Vicious_Strike_card,
	Single_Shot_card,
	Twin_Shot_card,
	Holy_Arrow_card,
	Torrent_Shot_card,
	Arrow_Rain_card,
	Myriad_Arrows_card,
	Primal_Force_card,
	Vorpal_Blade_card,
	Weary_Thrust_card,
	Cruel_Attack_card,
	Vile_Assault_card,
	Poison_Arrow_card,
	Dia_card,
	Diarama_card,
	Diarahan_card,
	Media_card,
	Mediarama_card,
	Mediarahan_card,
	Salvation_card,
	Patra_card,
	Me_Patra_card,
	Re_Patra_card,
	Posumudi_card,
	Amrita_card,
	Recarm_card,
	Samarecarm_card,
	Tarunda_card,
	Matarunda_card,
	Sukunda_card,
	Masukunda_card,
	Rakunda_card,
	Marakunda_card,
	Dekunda_card,
	Tarukaja_card,
	Matarukaja_card,
	Sukukaja_card,
	Masukukaja_card,
	Rakukaja_card,
	Marakukaja_card,
	Power_Charge_card,
	Mind_Charge_card,
	Dekaja_card,
	Tetrakarn_card,
	Makarakarn_card,
	Rebellion_card,
	Revolution_card,
	Fire_Break_card,
	Ice_Break_card,
	Wind_Break_card,
	Elec_Break_card,
	Trafuri_card,
	Recarmdra_card,
	Charmdi_card,
	Enradi_card,
	Resist_Slash_card,
	Null_Slash_card,
	Repel_Slash_card,
	Absorb_Slash_card,
	Resist_Strike_card,
	Null_Strike_card,
	Repel_Strike_card,
	Absorb_Strike_card,
	Resist_Pierce_card,
	Null_Pierce_card,
	Repel_Pierce_card,
	Absorb_Pierce_card,
	Resist_Fire_card,
	Null_Fire_card,
	Repel_Fire_card,
	Absorb_Fire_card,
	Resist_Ice_card,
	Null_Ice_card,
	Repel_Ice_card,
	Absorb_Ice_card,
	Resist_Elec_card,
	Null_Elec_card,
	Repel_Elec_card,
	Absorb_Elec_card,
	Resist_Wind_card,
	Null_Wind_card,
	Repel_Wind_card,
	Absorb_Wind_card,
	Resist_Light_card,
	Null_Light_card,
	Repel_Light_card,
	Resist_Dark_card,
	Null_Dark_card,
	Repel_Dark_card,
	Null_Charm_card,
	Null_Distress_card,
	Null_Panic_card,
	Null_Fear_card,
	Null_Rage_card,
	Null_Freeze_card,
	Null_Shock_card,
	Null_Poison_card,
	Unshaken_Will_card,
	Dodge_Slash_card,
	Evade_Slash_card,
	Dodge_Strike_card,
	Evade_Strike_card,
	Dodge_Pierce_card,
	Evade_Pierce_card,
	Dodge_Fire_card,
	Evade_Fire_card,
	Dodge_Ice_card,
	Evade_Ice_card,
	Dodge_Wind_card,
	Evade_Wind_card,
	Dodge_Elec_card,
	Evade_Elec_card,
	Premonition_card,
	Angelic_Grace_card,
	Fire_Boost_card,
	Fire_Amp_card,
	Ice_Boost_card,
	Ice_Amp_card,
	Elec_Boost_card,
	Elec_Amp_card,
	Wind_Boost_card,
	Wind_Amp_card,
	Fast_Retreat_card,
	SkillBlank1_card,
	SkillBLANK2_card,
	SkillBLANK3_card,
	SkillBLANK4_card,
	SkillBLANK5_card,
	SkillBLANK6_card,
	Raging_Tiger_card,
	Counter_card,
	Counterstrike_card,
	High_Counter_card,
	Regenerate_1_card,
	Regenerate_2_card,
	Regenerate_3_card,
	Invigorate_1_card,
	Invigorate_2_card,
	Invigorate_3_card,
	Growth_1_card,
	Growth_2_card,
	Growth_3_card,
	AutoTarukaja_card,
	AutoRakukaja_card,
	AutoSukukaja_card,
	Alertness_card,
	Sharp_Student_card,
	Apt_Pupil_card,
	Ali_Dance_card,
	Firm_Stance_card,
	Spell_Master_card,
	Arms_Master_card,
	SkillBLANK7_card,
	SkillBLANK8_card,
	Divine_Grace_card,
	Endure_card,
	Enduring_Soul_card,
	Survive_Light_card,
	Survive_Dark_card,
	AutoMaraku_card,
	AutoMataru_card,
	AutoMasuku_card,
	Charm_Boost_card,
	Poison_Boost_card,
	Distress_Boost_card,
	Panic_Boost_card,
	Fear_Boost_card,
	Rage_Boost_card,
	Ailment_Boost_card,
	Hama_Boost_card,
	Mudo_Boost_card,
	Endure_Light_card,
	Endure_Dark_card,
	Phys_Boost_card,
	Cool_Breeze_card,
	Victory_Cry_card,
	SkillBLANK9_card,
	Reserve
};

enum <ushort> ItemPassives
{
	RESERVE,
	Plus_1_Strength,
	Plus_2_Strength,
	Plus_3_Strength,
	Plus_4_Strength,
	Plus_5_Strength,
	Plus_1_Endurance,
	Plus_2_Endurance,
	Plus_3_Endurance,
	Plus_4_Endurance,
	Plus_5_Endurance,
	Plus_1_Magic,
	Plus_2_Magic,
	Plus_3_Magic,
	Plus_4_Magic,
	Plus_5_Magic,
	Plus_1_Agility,
	Plus_2_Agility,
	Plus_3_Agility,
	Plus_4_Agility,
	Plus_5_Agility,
	Plus_1_Luck,
	Plus_2_Luck,
	Plus_3_Luck,
	Plus_4_Luck,
	Plus_5_Luck,
	Plus_10_HP,
	Plus_20_HP,
	Plus_30_HP,
	Plus_40_HP,
	Plus_50_HP,
	Plus_10_SP,
	Plus_20_SP,
	Plus_30_SP,
	Plus_40_SP,
	Plus_50_SP,
	Plus_Effective_vs_Magician,
	Plus_Effective_vs_Priestess,
	Plus_Effective_vs_Empress,
	Plus_Effective_vs_Emperor,
	Plus_Effective_vs_Priestess2,
	Plus_Effective_vs_Lovers,
	Plus_Effective_vs_Chariot,
	Plus_Effective_vs_Justice,
	Plus_Effective_vs_Hermit,
	Plus_Effective_vs_Fortune,
	Plus_Effective_vs_Strength,
	Plus_Effective_vs_Hanged,
	Plus_Effective_vs_Death,
	Plus_Charm_low_odds,
	Plus_Charm_med_odds,
	Plus_Charm_high_odds,
	Plus_Distress_low_odds,
	Plus_Distress_med_odds,
	Plus_Distress_high_odds,
	Plus_Panic_low_odds,
	Plus_Panic_med_odds,
	Plus_Panic_high_odds,
	Plus_Fear_low_odds,
	Plus_Fear_med_odds,
	Plus_Fear_high_odds,
	Plus_Rage_low_odds,
	Plus_Rage_med_odds,
	Plus_Rage_high_odds,
	Plus_Poison_low_odds,
	Plus_Poison_med_odds,
	Plus_Poison_high_odds,
	Plus_Crit_rate_up_low,
	Plus_Crit_rate_up_med,
	Plus_Crit_rate_up_high,
	Plus_dummy1,
	Plus_dummy2,
	Plus_dummy3,
	Plus_Resist_Strike_low,
	Plus_Resist_Strike_med,
	Plus_Resist_Strike_high,
	Plus_Resist_Slash_low,
	Plus_Resist_Slash_med,
	Plus_Resist_Slash_high,
	Plus_Resist_Pierce_low,
	Plus_Resist_Pierce_med,
	Plus_Resist_Pierce_high,
	Plus_Resist_Phys_low,
	Plus_Resist_Phys_med,
	Plus_Resist_Phys_high,
	Plus_Resist_Fire_low,
	Plus_Resist_Fire_med,
	Plus_Resist_Fire_high,
	Plus_Resist_Ice_low,
	Plus_Resist_Ice_med,
	Plus_Resist_Ice_high,
	Plus_Resist_Wind_low,
	Plus_Resist_Wind_med,
	Plus_Resist_Wind_high,
	Plus_Resist_Elec_low,
	Plus_Resist_Elec_med,
	Plus_Resist_Elec_high,
	Plus_Resist_Magic_low,
	Plus_Resist_Magic_med,
	Plus_Resist_Magic_high,
	Plus_Reduce_Stumble_low,
	Plus_Reduce_Stumble_med,
	Plus_Reduce_Stumble_high,
	Plus_Evade_Strike_low,
	Plus_Evade_Strike_med,
	Plus_Evade_Strike_high,
	Plus_Evade_Slash_low,
	Plus_Evade_Slash_med,
	Plus_Evade_Slash_high,
	Plus_Evade_Pierce_low,
	Plus_Evade_Pierce_med,
	Plus_Evade_Pierce_high,
	Plus_Evade_Phys_low,
	Plus_Evade_Phys_med,
	Plus_Evade_Phys_high,
	Plus_Evade_Fire_low,
	Plus_Evade_Fire_med,
	Plus_Evade_Fire_high,
	Plus_Evade_Ice_low,
	Plus_Evade_Ice_med,
	Plus_Evade_Ice_high,
	Plus_Evade_Wind_low,
	Plus_Evade_Wind_med,
	Plus_Evade_Wind_high,
	Plus_Evade_Elec_low,
	Plus_Evade_Elec_med,
	Plus_Evade_Elec_high,
	Plus_Evade_Magic_low,
	Plus_Evade_Magic_med,
	Plus_Evade_Magic_high,
	Plus_unknown_effect,
	Plus_10_Strength,
	Plus_10_Endurance,
	Plus_10_Magic,
	Plus_10_Agility,
	Plus_10_Luck,
	Plus_1_to_all_stats,
	Plus_2_to_all_stats,
	Plus_3_to_all_stats,
	Plus_4_to_all_stats,
	Plus_5_to_all_stats,
	Plus_10_to_all_stats,
	Plus_100_HP,
	Plus_100_SP,
	Plus_Effective_vs_Magician2,
	Plus_Deadly_vs_Magician,
	Plus_Effective_vs_Priestess3,
	Plus_Deadly_vs_Priestess,
	Plus_Effective_vs_Empress2,
	Plus_Deadly_vs_Empress,
	Plus_Effective_vs_Emperor2,
	Plus_Deadly_vs_Emperor,
	Plus_Effective_vs_Priestess4,
	Plus_Deadly_vs_Priestess2,
	Plus_Effective_vs_Lovers2,
	Plus_Deadly_vs_Lovers,
	Plus_Effective_vs_Chariot2,
	Plus_Deadly_vs_Chariot,
	Plus_Effective_vs_Justice2,
	Plus_Deadly_vs_Justice,
	Plus_Effective_vs_Hermit2,
	Plus_Deadly_vs_Hermit,
	Plus_Effective_vs_Fortune2,
	Plus_Deadly_vs_Fortune,
	Plus_Effective_vs_Strength2,
	Plus_Deadly_vs_Strength,
	Plus_Effective_vs_Hanged2,
	Plus_Deadly_vs_Hanged_Man,
	Plus_Effective_vs_Death2,
	Plus_Deadly_vs_Death,
	Plus_All_ailments_low,
	Plus_All_ailments_med,
	Plus_All_ailments_high,
	Strengthens_Fire_attacks,
	Strengthens_Ice_attacks,
	Strengthens_Elec_attacks,
	Strengthens_Wind_attacks,
	Counter_phys_low_odds,
	Counter_phys_med_odds,
	Counter_phys_high_odds,
	Plus_Auto_Tarukaja,
	Plus_Auto_Rakukaja,
	Plus_Auto_Sukukaja,
	Plus_Charm_Resist,
	Plus_Distress_Resist,
	Plus_Panic_Resist,
	Plus_Fear_Resist,
	Plus_Rage_Resist,
	Plus_Poison_Resist,
};

enum<ubyte> ElementalType
{
    Passive = 255,
    Slash = 0,
    Strike = 1,
    Pierce = 2,
    Fire = 3,
    Ice = 4,
    Electric = 5,
    Wind = 6,
    Almighty = 7,
    Light = 8,
    Dark = 9,
    Charm = 10,
    Poison = 11,
    Distress = 12,
    Panic = 13,
    Fear = 14,
    Rage = 15,
    Healing = 16,
    Support = 17,
    Special2 = 18,
};

typedef struct
{
    byte : 5;
    bool Makoto : 1 <name = "Equippable by Makoto">;
    bool Yukari : 1 <name = "Equippable by Yukari">;
    bool Aigis : 1 <name = "Equippable by Aigis">;
    bool Mitsuru : 1 <name = "Equippable by Mitsuru">;
    bool Junpei : 1 <name = "Equippable by Junpei">;
    bool Fuuka : 1 <name = "Equippable by Fuuka">;
    bool Akihiko : 1 <name = "Equippable by Akihiko">;
    bool Ken : 1 <name = "Equippable by Ken">;
    bool Shinjiro : 1 <name = "Equippable by Shinjiro">;
    bool Koromaru : 1 <name = "Equippable by Koromaru">;
    bool Femmc : 1 <name = "Equippable by Femmc">;
} EquippableUsers <name = "Equippable User(s)"> ; 


enum<ushort> WIcon
{
    DummyIcon = 0,
    TwoHSwordIcon = 1,
    OneHSwordIcon = 2,
    BowIcon = 4,
    SpearIcon = 8,
    AxeIcon = 16,
    FistsIcon = 32,
    GunIcon = 64,
    KnifeIcon = 128,
    NaginataIcon = 256,
    RapierIcon = 512,
};

enum<ushort> IIcon
{
    UseWeaponIcon = 0,
    ArmorIcon = 16,
    BootsIcon = 32,
    AccessorIcon = 64,
    NormalItemIcon = 128,
    KeyItemIcon = 256,
    SkillCard = 512,
};

enum<ushort> DescriptionTable
{
    DatWeaponHelp,
    DatArmorHelp,
    DatBootsHelp,
    DatAccessoryHelp,
    DatItemHelp,
    DatEventItemHelp,
    DatSkillCardHelp,
};

enum<byte> Physical
{
    SlashDamage,
    StrikeDamage,
    PierceDamage,
};

typedef struct (ushort index, uint Type)
{
    switch (Type)
    {
        case 0: local WeaponNames Name = index; break;
        case 1: local ArmorNames  Name = index; break;
        case 2: local BootNames Name = index; break;
        case 3: local AccessoryNames Name = index; break;
        case 4: local ItemNames Name = index; break;
        case 5: local KeyItemNames Name = index; break;
        case 6: local SkillCardNames Name = index; break;
    }
        
    DescriptionTable DescriptionTableIndex <bgcolor=cBlue, comment="Decides which bmd from init.bin/init/datMsg.pak to use for description">;
    ushort Unk4 <bgcolor=cGray>;
    WIcon WeaponIcon <bgcolor=cYellow, comment="Used only if ItemIcon is set to 0">;
    IIcon ItemIcon <bgcolor=cGreen>;
    short Attack <bgcolor=cRed>;
    ushort Accuracy <bgcolor=cGreen>;
    byte Unk5[4] <bgcolor=cGray>;
    ushort Defense <bgcolor=cBlue>;
    ushort Evasion <bgcolor=cPurple>;
    byte Unk6[16] <bgcolor=cGray>;
    BattleSkill Skill <bgcolor=cRed>;
    byte Unk7[2] <bgcolor=cGray>;
    ItemPassives PassiveEffect <bgcolor=cGreen, comment="effect automatically gets added to the item description from init.bin/init/datMds.pak/DatAddEffectHelp.bmd">;
    byte Unk1[2] <bgcolor=cBlack>;
    ElementalType Element;
    byte Unk2[3] <bgcolor=cBlack>;
    EquippableUsers Users;
    byte Unk3[6] <bgcolor=cGray>;

} ItemTblEntry <optimize=false, read=ItemTblToString>;

string ItemTblToString(ItemTblEntry& value)
{
    return EnumToString( value.Name ); 
}

typedef struct
{
    local int i = 0;
    for ( i = 0; i < 0x200; i++ )
        ItemTblEntry Entry(i, 0);
} WeaponEntries <read=readweapon>;


typedef struct
{
    local int i = 0;
    for ( i = 0; i < 0x100; i++ )
        ItemTblEntry Entry(i, 1);
} ArmorEntries <read=readarmor>;

typedef struct
{
    local int i = 0;
    for ( i = 0; i < 0x100; i++ )
        ItemTblEntry Entry(i, 2);
} BootsEntries <read=readboots>;

typedef struct
{
    local int i = 0;
    for ( i = 0; i < 0x100; i++ )
        ItemTblEntry Entry(i, 3);
} AccessoryEntries <read=readaccessory>;

typedef struct
{
    local int i = 0;
    for ( i = 0; i < 0x100; i++ )
        ItemTblEntry Entry(i, 4);
} ItemEntries <read=readitem>;

typedef struct
{
    local int i = 0;
    for ( i = 0; i < 0x90; i++ )
        ItemTblEntry Entry(i, 5);
} KeyItemEntries <read=readkeyitem>;

typedef struct
{
    local int i = 0;
    for ( i = 0; i < 0x100; i++ )
        ItemTblEntry Entry(i, 6);
} SkillCardEntries <read=readskill>;

typedef struct
{
    local int i = 0;
    local int total = EntryCount - 1936;
    for ( i = 0; i < total; i++ )
        ItemTblEntry Entry(i, 7);
} ExtraEntries;


string readweapon(WeaponEntries& h) {return "512 Entries"; }
string readarmor(ArmorEntries& h) {return "256 Entries";}
string readboots(BootsEntries& h) {return "256 Entries";}
string readaccessory(AccessoryEntries& h) {return "256 Entries";}
string readitem(ItemEntries& h) {return "256 Entries";}
string readkeyitem(KeyItemEntries& h) {return "144 Entries";}
string readskill(SkillCardEntries& h) {return "256 Entries";}


struct
{
    uint EntryCount <comment="This value is ignored by the template lol">;
    byte unk[12];
    WeaponEntries Weapons;
    ArmorEntries Armors;
    BootsEntries Boots;
    AccessoryEntries Accessories;
    ItemEntries Items;
    KeyItemEntries KeyItems;
    SkillCardEntries SkillCards;
    ExtraEntries Custom <comment="Completely new items added by mods">;
} ItemTbl;

