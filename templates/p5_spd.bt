//------------------------------------------------
//--- 010 Editor v8.0 Binary Template
//
//      File: p5_spd.bt
//   Authors: TGE
//   Version: 1.0
//   Purpose: Parse Persona 5 SPD files 
//  Category: 
// File Mask: *.spd
//  ID Bytes: 
//   History: 
//------------------------------------------------

//---------------------------------------------
// Primitive types
//---------------------------------------------
typedef char bool;
typedef char s8;
typedef uchar u8;
typedef int16 s16;
typedef uint16 u16;
typedef int16 s16;
typedef int32 s32;
typedef uint32 u32;
typedef int64 s64;
typedef uint64 u64;
typedef float f32;
typedef double f64;

//---------------------------------------------
// Random
//---------------------------------------------
local uint __RandomSeed = 0xDEADBABE;
local uint __RandomBit = 0;
local uint __RandomCount = 0;
 
uint MyRandom( uint to )
{
    ++__RandomCount;
    __RandomBit  = ( (__RandomSeed >> 0 ) ^ ( __RandomSeed >> 2 ) ^ ( __RandomSeed >> 3 ) ^ ( __RandomSeed >> 5 ) ) & 1;
    __RandomSeed = ( ( ( ( __RandomBit << 15 ) | ( __RandomSeed >> 1 ) ) + ( 0xBABE / __RandomCount ) ) % to );

    while( __RandomSeed < 0 )
        __RandomSeed += to;

    return __RandomSeed;
}

uint RandomColor()
{
    return MyRandom( 0xFFFFFFFF );
}

void SetRandomBackColor()
{
    SetBackColor( RandomColor() );
}

struct SpriteTexture;
struct SpriteEntry;

typedef struct
{
    SetRandomBackColor();
    LittleEndian();
	char Magic[4];      // 'SPR0'
	u32 FileType;        // always 2, maybe version
	u32 FileSize;
	u32 Field0C;        // 0
	u32 Field10;        // 0x20, offset
	u16 ImageCount;   // 1
	u16 SpriteCount;    // number of entries in the file
	u32 ImageInfoOffset;  // 0x20, offset
	u32 SpriteInfoOffset;    // 0x80, offset

    FSeek( ImageInfoOffset );
    SpriteTexture Textures[ ImageCount ];

    FSeek( SpriteInfoOffset );
    SpriteEntry Entries[ SpriteCount ];

} SprFile <optimize=false>;

typedef struct 
{
    SetRandomBackColor();

	u32 Id;                 // starts at 1
	u32 Flag;            	// 0?
	u32 Offset;             // offset of data in file
	u32 Size;               // size of data in file
	u32 Width;              // width of the texture
	u32 Height;             // height of the texture
	u32 Field18;            // 0?
	u32 Field1C;            // 0?
	char Description[16];   // For debugging

    local u64 seekBack = FTell();
    FSeek( Offset );
    u8 Data[ Size ];
    FSeek( seekBack );

} SpriteTexture <optimize=false, read=Str("Texture Id: %d, %s", Id, Description)>;

typedef struct 
{
    SetRandomBackColor();

	u32 SpriteID;
    u32 TargetImageID;
    u32 SysFlag;
    u32 EdtFlag;
    u32 Layer;
    u32 AlphaReg;
    u32 Reserve1;
    u32 Reserve2;
    u32 TexPosX;
    u32 TexPosY;
    u32 TexWidth;
    u32 TexHeight;
    s32 ScrPosX;
    s32 ScrPosY;
    u32 ScrWidth;
    u32 ScrHeight;
    u32 StretchLenT;
    u32 StretchLenB;
    u32 StretchLenL;
    u32 StretchLenR;
    u32 VertexColLT;
    u32 VertexColRT;
    u32 VertexColRB;
    u32 VertexColLB;
    u8 RepeatNumsX;
    u8 RepeatNumsY;
    u8 RepeatStepX;
    u8 RepeatStepY;
    u16 Wait;
    u16 AnimWait;
    u32 Reserve3;
    u32 Reserve4;
    char Name[48];

} SpriteEntry <optimize=false, read=Str("Sprite Id: %d, Texture Id: %d", SpriteID, TargetImageID)>;

// Read file
local string filePath = GetFileName();
local string fileName = FileNameGetBase( filePath, false );
local string fileExt = FileNameGetExtension( filePath );

if (fileExt == ".spdspr")
	SpriteEntry entry;
else
	SprFile File;