//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: DatSkillNormalDataAsset.uasset
//   Authors: Light8227
//   Version: 2.0
//------------------------------------------------
#include "ue4_iopackage.bt"

LittleEndian();

typedef struct
{
    byte unk[98];
}unk;

typedef struct
{
    byte unk2[13];
    long flag <name="Flag">;
    byte unk3[25];
    byte use <name="Use">;
    byte unk4[34];
    byte koukatype <name="KoukaType">;
    byte unk5[33];
    byte costtype <name="CostType">;
    byte unk6[25];
    byte cost <name="Cost">;
    byte unk7[26];
    byte costbase <name="CostBase">;
    byte unk8[34];
    byte targettype <name="TargetType">;
    byte unk9[33];
    byte targetarea <name="TargetArea">;
    byte unk10[33];
    ubyte targetrule <name="TargetRule">;
    byte unk11[25];
    uint untargetbadstat <name="UntargetBadStat">;
    byte unk12[33];
    ubyte hitratio <name="HitRatio">;
    byte unk13[33];
    byte targetcntmin <name="TargetCntMin">;
    byte unk14[33];
    byte targetcntmax <name="TargetCntMax">;
    byte unk15[33];
    byte hptype <name="HPType">;
    byte unk16[25];
    ubyte hpn <name="HPN">;
    byte unk17[34];
    byte sptype <name="SPType">;
    byte unk18[25];
    byte spn <name="SPN">;
    byte unk19[34];
    byte badtype <name="BadType">;
    byte unk20[33];
    ubyte badratio <name="BadRatio">;
    byte unk21[25];
    byte badstatus <name="BadStatus">;
    byte unk22[28];
    byte support <name="Support">;
    byte unk23[36];
    byte program <name="Program">;
    byte unk24[33];
    byte criticalratio <name="CriticalRatio">;
    byte unk25[33];
    byte swoonratio <name="SwoonRatio">;
    byte unk26[20];
}skillData;

struct
{
    unk unknown <name="Unknown">;
    skillData skilldata[700] <name="SkillData">;
}fileData <name="DatSkillNormalDataAsset.uasset">;